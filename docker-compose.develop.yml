# Docker Compose per ambiente di sviluppo
# Estende docker-compose.yml aggiungendo servizi di sviluppo come MinIO

services:
  # MinIO - AWS S3 Compatible Object Storage per sviluppo locale
  minio:
    image: minio/minio:latest
    container_name: "minio-${APP_NAME}"
    restart: always
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    command: 'minio server /data/minio --console-address ":8900"'
    platform: linux/amd64
    ports:
      - "${FORWARD_MINIO_PORT:-9000}:9000"
      - "${FORWARD_MINIO_CONSOLE_PORT:-8900}:8900"
    volumes:
      - "./docker/volumes/minio/data:/data"
    healthcheck:
      test:
        - CMD
        - mc
        - ready
        - local
      retries: 3
      timeout: 5s
    networks:
      - laravel
  # needed for mails testing
  mailpit:
    container_name: "mailpit-${APP_NAME}"
    image: "axllent/mailpit:latest"
    ports:
      - "${FORWARD_MAILPIT_PORT:-1025}:1025"
      - "${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025"
    networks:
      - laravel

  # Elasticsearch - Search and analytics engine
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
    container_name: "elasticsearch-${APP_NAME}"
    restart: always
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - "./docker/volumes/elasticsearch/data:/usr/share/elasticsearch/data"
    networks:
      - laravel
